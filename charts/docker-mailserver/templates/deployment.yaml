---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{ end }}
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy: {{- toYaml .Values.pod.dockermailserver.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
        {{- if .Values.pod.dockermailserver.annotations }}
      annotations:
{{ toYaml .Values.pod.dockermailserver.annotations | indent 8 }}
        {{ end }}
    spec:
      serviceAccountName: {{ template "dockermailserver.serviceAccountName" . }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      volumes:
         - name: "data"
           persistentVolumeClaim:
             claimName: {{ template "dockermailserver.pvcName" . }}
         - name: "config"
           emptyDir: {}
         - name: "configmap"
           configMap:
             name: {{ template "dockermailserver.fullname" . }}-configs
         - name: "opendkim-keys"
           secret:
             secretName: {{ template "dockermailserver.fullname" . }}-secrets
{{ if .Values.pod.dockermailserver.ssl_type }}
         - name: "ssl-cert"
           secret:
{{ if .Values.ssl.useExisting }}
             secretName: {{ .Values.ssl.existingName }}
{{- else }}
             secretName: {{ template "dockermailserver.fullname" . }}-tls
{{- end }}
{{- end }}
      initContainers:
        - name: prep-config
          image: {{ .Values.initContainer.image.name }}:{{ .Values.initContainer.image.tag }}
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          command: [ 'sh','-c', 'cp /tmp/configmaps/* /tmp/docker-mailserver -rfpvL' ]
          volumeMounts:
            - name: configmap
              mountPath: /tmp/configmaps
              readOnly: true
            - name: config
              mountPath: /tmp/docker-mailserver/
          resources:
{{ toYaml .Values.initContainer.resources | indent 12 }}
          securityContext:
{{ toYaml .Values.initContainer.containerSecurityContext | indent 12 }}
      containers:
        - name: dockermailserver
          env:
{{- include "dockermailserver.upstream-env-variables" . | nindent 10 }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
            {{- if eq .Values.pod.dockermailserver.enable_fail2ban 1.0 }}
            capabilities:
              add:
                - "NET_ADMIN"
            {{ end }}
          securityContext:
{{ toYaml .Values.pod.dockermailserver.containerSecurityContext | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /tmp/docker-mailserver
{{ if .Values.pod.dockermailserver.ssl_type }}
            - name: ssl-cert
              mountPath: /tmp/ssl
              readOnly: true
{{- end }}
            - name: data
              mountPath: /var/mail
              subPath: mail
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
            - name: configmap
              subPath: dovecot-services.cf
              mountPath: /etc/dovecot/conf.d/services.cf
              readOnly: true
            - name: configmap
              subPath: dovecot.cf
              mountPath: /etc/dovecot/conf.d/zz-custom.cf
              readOnly: true
            - name: configmap
              subPath: TrustedHosts
              mountPath: /tmp/docker-mailserver/opendkim/TrustedHosts
              readOnly: true
            - name: configmap
              subPath: SigningTable
              mountPath: /tmp/docker-mailserver/opendkim/SigningTable
              readOnly: true
            - name: configmap
              subPath: KeyTable
              mountPath: /tmp/docker-mailserver/opendkim/KeyTable
              readOnly: true
            {{- if .Values.pod.dockermailserver.enable_dovecot_replication }}
            - name: configmap
              subPath: 80-replication.conf
              mountPath: /etc/dovecot/conf.d/80-replication.conf
              readOnly: true
            - name: configmap
              subPath: 91-override-sieve.conf
              mountPath: /etc/dovecot/conf.d/91-override-sieve.conf
              readOnly: true
            {{ end }}
              {{- if .Values.demoMode.enabled }}
            - name: opendkim-keys
              mountPath: "/tmp/docker-mailserver/opendkim/keys/example.com/mail.private"
              subPath: "example.com-mail.private"
              readOnly: true
              {{- else -}}
              {{/* Mount a dkim key for every domain configured */}}
              {{- range .Values.domains }}
              {{- $path := printf "/tmp/docker-mailserver/opendkim/keys/%s/mail.private" . }}
              {{- $name := printf "%s-mail.private" . }}
            - name: opendkim-keys
              mountPath: {{ $path }}
              subPath: {{ $name }}
              readOnly: true
              {{- end }}
              {{- end }}
          livenessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|opendkim|opendmarc|postfix|rsyslog" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
      restartPolicy: "Always"

