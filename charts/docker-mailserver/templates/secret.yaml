{{/* This whole template is only necessary if we've enabled creation of the configmap (default true) */}}
{{- if not .Values.secret.useExisting -}}  
---
apiVersion: "v1"
kind: "Secret"
metadata:
  labels:
    app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}-secrets
data:
  {{/* Import any files ending in  .secret, as secrets */}}
  {{- $globdash := .Files.Glob "*.secret" }}
  {{- if $globdash -}}
  {{- (.Files.Glob "*.secret").AsSecrets | nindent 2 -}}
  {{- end -}}
  {{/* If we're in demo mode, just import a pre-created key for example.com */}}
  {{- if .Values.demoMode.enabled -}}  
  example.com-mail.private: {{ .Files.Get "demo-mode-dkim-key-for-example.com.key" | b64enc }}
  {{/* If we're _not_ in demo mode, assume the user has created dkim keys for his domains, and import them */}}
  {{- else -}}
  {{/* Import any opendkim keys for configured domains, as "<domain name>-mail.private" */}}
  {{- $files := .Files }}
  {{ range .Values.domains }}
  {{- $path := printf "config/opendkim/keys/%s/mail.private" . }}
  {{- $name := printf "%s-mail.private" . }}
  {{ $name }}: {{ $files.Get $path | b64enc }}
  {{ end -}}
  {{ end }}
{{- end -}}